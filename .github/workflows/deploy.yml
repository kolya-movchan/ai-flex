name: Deploy to S3

on:
  push:
    branches:
      - main

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      # Step 1: Checkout code
      - name: Checkout code
        uses: actions/checkout@v2

      # Step 2: Set up Node.js
      - name: Set up Node.js
        uses: actions/setup-node@v2
        with:
          node-version: 18

      # Step 3: Install dependencies
      - name: Install dependencies
        run: npm install

      # Step 4: Build the application (Vite build)
      - name: Build the app
        env:
          VITE_AWS_API_URL: ${{ secrets.AWS_API_URL }}
          VITE_APP_SYNC_URL: ${{ secrets.APP_SYNC_URL }}
          VITE_APP_SYNC_API_KEY: ${{ secrets.APP_SYNC_API_KEY }}
          VITE_PUBLIC_AWS_REGION: ${{ secrets.AWS_REGION }}
          VITE_PUBLIC_AWS_BUCKET_NAME: ${{ secrets.AWS_BUCKET_NAME }}
          VITE_PUBLIC_AWS_IDENTITY_POOL_ID: ${{ secrets.AWS_IDENTITY_POOL_ID }}
          VITE_FINGERPRINT_API_KEY: ${{ secrets.FINGERPRINT_API_KEY }}
        run: npm run build

      # Step 5: Configure AWS CLI
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.AWS_REGION }}

      # Step 6: Sync build files to S3 with public read access
      - name: Deploy to S3
        run: aws s3 sync ./dist s3://${{ secrets.AWS_BUCKET_NAME }} --acl public-read

      # Step 7: Invalidate CloudFront cache
      - name: Invalidate CloudFront cache
        run: aws cloudfront create-invalidation --distribution-id ${{ secrets.CLOUDFRONT_DISTRIBUTION_ID }} --paths "/*" --output json
